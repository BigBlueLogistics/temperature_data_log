version: "3.9"

networks:
  temperature:
    name: temperature_net

services:
  mongo_1:
    image: mongo:5.0.16
    container_name: mongo_1
    command:
      ["--replSet", "temperature-replset", "--bind_ip_all", "--port", "3200"]
    volumes:
      - ./app/data/mongo_1:/data/db
    ports:
      - 3200:3200
    healthcheck:
      test: test $$(echo "rs.initiate({_id:'temperature-replset',members:[{_id:0,host:\"mongo_1:3200\"},{_id:1,host:\"mongo_2:3300\"}]}).ok || rs.status().ok" | mongo --port 3200 --quiet) -eq 1
      interval: 10s
      start_period: 30s
    networks:
      - temperature
  mongo_2:
    image: mongo:5.0.16
    container_name: mongo_2
    command:
      ["--replSet", "temperature-replset", "--bind_ip_all", "--port", "3300"]
    volumes:
      - ./app/data/mongo_2:/data/db
    ports:
      - 3300:3300
    networks:
      - temperature
  apptemperature:
    build:
      context: ./app
      dockerfile: Dockerfile
      target: app_dev
    container_name: apptemperature
    ports:
      - "3100:3100"
    volumes:
      - ./app:/var/www/html
    depends_on:
      - mongo_1
      - mongo_2
    networks:
      - temperature
  jobtemperature:
    build:
      context: ./jobs
      dockerfile: Dockerfile
      target: job_dev
    container_name: jobtemperature
    volumes:
      - ./jobs:/var/www/html
    depends_on:
      - mongo_1
      - mongo_2
    networks:
      - temperature
