version: "3.9"

networks:
  hawkeye:
    name: hawkeye_net

services:
  mongo_1:
    image: mongo:4.4.22
    container_name: mongo_1
    command: ["--replSet", "hawkeye-replset", "--bind_ip_all", "--port", "3200"]
    volumes:
      - ./app/data/mongo_1:/data/db
    ports:
      - 3200:3200
    healthcheck:
      test: test $$(echo "rs.initiate({_id:'hawkeye-replset',members:[{_id:0,host:\"mongo_1:3200\"},{_id:1,host:\"mongo_2:3300\"}]}).ok || rs.status().ok" | mongo --port 3200 --quiet) -eq 1
      interval: 10s
      start_period: 30s
    networks:
      - hawkeye
  mongo_2:
    image: mongo:4.4.22
    container_name: mongo_2
    command: ["--replSet", "hawkeye-replset", "--bind_ip_all", "--port", "3300"]
    volumes:
      - ./app/data/mongo_2:/data/db
    ports:
      - 3300:3300
    networks:
      - hawkeye
  app:
    build:
      context: ./app
      dockerfile: Dockerfile
      target: app_dev
    container_name: apptemp
    stdin_open: true
    tty: true
    env_file:
      - ./app/.env-development
    ports:
      - "3100:3100"
    volumes:
      - ./app:/var/www/html
    depends_on:
      - mongo_1
      - mongo_2
    networks:
      - hawkeye
  jobs:
    build:
      context: ./jobs
      dockerfile: Dockerfile
      target: job_dev
    container_name: jobtemp
    stdin_open: true
    tty: true
    env_file:
      - ./jobs/.env-development
    volumes:
      - ./jobs:/var/www/html
    depends_on:
      - mongo_1
      - mongo_2
    networks:
      - hawkeye
