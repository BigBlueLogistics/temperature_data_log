version: "3.9"

networks:
  temperature_prod:
    name: temperature_net

services:
  mongo_1_prod:
    image: mongo:5.0.16
    container_name: mongo_1_prod
    command:
      ["--replSet", "temperature-replset", "--bind_ip_all", "--port", "4200"]
    restart: always
    volumes:
      - ./app/data/mongo_1_prod:/data/db
    ports:
      - 4200:4200
    healthcheck:
      test: test $$(echo "rs.initiate({_id:'temperature-replset',members:[{_id:0,host:\"mongo_1_prod:4200\"},{_id:1,host:\"mongo_2_prod:4300\"}]}).ok || rs.status().ok" | mongo --port 4200 --quiet) -eq 1
      interval: 10s
      start_period: 50s
    networks:
      - temperature_prod
  mongo_2_prod:
    image: mongo:5.0.16
    container_name: mongo_2_prod
    command:
      ["--replSet", "temperature-replset", "--bind_ip_all", "--port", "4300"]
    restart: always
    volumes:
      - ./app/data/mongo_2_prod:/data/db
    ports:
      - 4300:4300
    networks:
      - temperature_prod
  apptemperature_prod:
    build:
      context: ./app
      dockerfile: Dockerfile
      target: app_prod
    container_name: apptemperature_prod
    ports:
      - "4100:4100"
    volumes:
      - ./app:/var/www/html
    depends_on:
      - mongo_1_prod
      - mongo_2_prod
    networks:
      - temperature_prod
  jobtemperature_prod:
    build:
      context: ./jobs
      dockerfile: Dockerfile
      target: job_prod
    container_name: jobtemperature_prod
    volumes:
      - ./jobs:/var/www/html
    depends_on:
      - mongo_1_prod
      - mongo_2_prod
    networks:
      - temperature_prod
